@model SuggestionSystem.Models.SuggProfile_SuggType_Interface
@{
}
<div class="modal-header ">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <p class="modal-title Mheader" id="myModalLabelEP">    <h4>ثبت نظر هیئت داوران</h4></p>
</div>
<style>
    .mds-bootstrap-persian-datetime-picker-popover {
        max-width: 20% !important;
        -webkit-box-shadow: 0 5px 15px 1px rgba(0, 0, 0, 0.1);
        box-shadow: 0 5px 15px 1px rgba(0, 0, 0, 0.1);
        z-index: 999999999;
    }

    .Mheader {
        color: white;
        text-align: center;
        font-family: Tahoma;
        font-size: large;
    }

    .ch {
        color: darkred;
    }

    span {
        color: red
    }
</style>


<link rel="stylesheet" href="demo.css" />
<link href="../../Content/jquery.md.bootstrap.datetimepicker.style.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID_SuggProfile)
        @Html.ValidationSummary(true)
        <div class="form-horizontal">
            <div class="panel panel-default">
                <div class="panel-body">
                            <div class="box box-warning">
                                <div class="box-body no-padding">
                                    <div class="panel panel-body">
                                        <div class=" col-md-12">
                                            امتیاز باید بین 1 تا 100 باشد
                                            <p>
                                            </p><div class="input-group">
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-danger btn-number input-lg" data-type="minus" data-field="Point">
                                                        <span class="glyphicon glyphicon-minus"></span>
                                                    </button>
                                                </span>
                                                <input type="text" name="Point" id="Point" class="form-control input-number input-lg" value="@Model.Point" min="1" max="100">
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-success btn-number input-lg" data-type="plus" data-field="Point">
                                                        <span class="glyphicon glyphicon-plus"></span>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            شماره صورت جلسه
                                            <div style="">
                                                <div class="input-group" style="margin-bottom: 10px">
                                                    <span class="input-group-addon">
                                                        <i class="icon-user">
                                                            <i class="fa fa-file-text-o "></i>
                                                        </i>
                                                    </span>
                                                    @Html.TextBoxFor(model => model.LetterNumber, new { @class = "form-control input-lg", placeholder = " شماره صورت جلسه ", autocomplete = "off" })
                                                </div>
                                                <b>
                                                    @Html.ValidationMessageFor(model => model.LetterNumber, "", new { @class = "text-danger" })
                                                </b>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <span style="color:#a70808" class="glyphicon glyphicon-star-empty faa-ring animated ">   &nbsp;   </span>
                                            تاریخ
                                            <div class="input-group" style="margin-bottom: 10px">

                                                @Html.TextBoxFor(model => model.Date, new { @class = "form-control input-lg", placeholder = "   تاریخ   ", autocomplete = "off", @id = "date2" })
                                            </div>
                                            <b>
                                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                            </b>
                                        </div>
                                        <div class="col-lg-12">
                                            <span style="color:#a70808" class="icon-star-empty faa-ring animated ">   &nbsp;   </span>
                                            وضعیت پیشنهاد
                                            <div class="input-group" style="margin-bottom: 10px">

                                                @Html.DropDownList("ID_SuggType", null, "وضعیت پیشنهاد را انتخاب کنید", new { @class = "form-control input-lg" })
                                            </div>
                                            <b>
                                                @Html.ValidationMessageFor(model => model.ID_SuggType, "", new { @class = "text-danger" })
                                            </b>
                                        </div>
                                        <div class="col-md-12">
                                            توضیحات
                                            <div style="">
                                                <div class="input-group" style="margin-bottom: 10px">
                                                    <span class="input-group-addon">
                                                        <i class="icon-user">
                                                            <i class="fa fa-text-height "></i>
                                                        </i>
                                                    </span>
                                                    @Html.TextAreaFor(model => model.Note_Referee, new { @class = "form-control input-lg", placeholder = " توضیحات ", autocomplete = "off" })
                                                </div>
                                                <b>
                                                    @Html.ValidationMessageFor(model => model.Note_Referee, "", new { @class = "text-danger" })
                                                </b>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img src="~/Content/Images/Wait.gif" alt="wiat" />
            Wait..
        </span>
        <button class="btn btn-danger" type="button" data-dismiss="modal">انصراف</button>
        <input class="btn btn-success waves-effect waves-light" type="submit" value="ثبت" />
    </div>
}
<script src="~/Scripts/jquery.md.bootstrap.datetimepicker.js"></script>



<script>
        //plugin bootstrap minus and plus
        //http://jsfiddle.net/laelitenetwork/puJ6G/
        $('.btn-number').click(function (e) {
            e.preventDefault();

            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type == 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });
        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

</script>

<script>

    var customOptions = {
        placeholder: "روز / ماه / سال"
        , twodigit: true
        , closeAfterSelect: true
        , nextButtonIcon: "fa fa-arrow-circle-right"
        , previousButtonIcon: "fa fa-arrow-circle-left"
        , buttonsColor: "blue"
        , forceFarsiDigits: true
        , markToday: true
        , markHolidays: true
        , highlightSelectedDay: true
        , sync: true
        , gotoToday: true
    
    }
    kamaDatepicker('date2', customOptions);

</script>